# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
name: "New SAB-GUI PR Pipeline"
trigger:
  - master

pr:
  - master

stages:
  # - stage: Test
  #   jobs:
  #     - job: Unit_Testing
  #       pool:
  #         vmImage: "Ubuntu-16.04"
  #       steps:
  #         - task: NodeTool@0
  #           inputs:
  #             versionSpec: "10.x"
  #           displayName: "Install Node.js"
  #         - script: yarn
  #           displayName: Install Packages
  #         - script: yarn build
  #           displayName: "Building project"
  #         - script: yarn lint
  #           condition: always()
  #           displayName: Linting
  #         - script: yarn test
  #           condition: always()
  #           displayName: Run Jest Tests

  #     # the cypress tests are using docker-compose.yml. compose builds the Dockerfile to build the app and serve it on localhost
  #     # then the cypress container is built from cypress.Dockerfile and runs the tests against the served app on localhost.
  #     - job: Cypress_tests
  #       dependsOn: Unit_Testing
  #       pool:
  #         vmImage: "Ubuntu-16.04"
  #       steps:
  #         - script: docker-compose up --exit-code-from e2e
  #           continueOnError: "true"
  #           displayName: Running Cypress tests
  #         - task: PublishTestResults@2
  #           condition: succeededOrFailed()
  #           inputs:
  #             testRunner: JUnit
  #             testResultsFiles: "**/test-output-*.xml"
  #             searchFolder: "$(System.DefaultWorkingDirectory)"
  - stage: Deploy
    # dependsOn:
    #   - Test
    # condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    jobs:
      - job: Publish_Artifact
        pool:
          vmImage: "Ubuntu-16.04"
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              displayName: "Define Time"
              script: 'RAZZLE_BUILD_DATE=$(date +%x)'
          - task: Docker@2
            inputs:
              containerRegistry: "MTSContainers"
              repository: "SAB-GUI"
              command: "buildAndPush"
              Dockerfile: "**/Dockerfile"
              Tags: |
                $(Build.BuildId)
                latest

      - job: Deploy_Jenkins
        dependsOn: Publish_Artifact
        steps:
          - task: JenkinsQueueJob@2
            inputs:
              serverEndpoint: "MTSJenkins"
              jobName: "dts-sab"
              captureConsole: true
              capturePipeline: true
              isParameterizedJob: true
              jobParameters: "azure_build_number=$(Build.BuildId)"
